{
  "uuid": "ee6b915a-9bcf-4365-8e8c-8e405901e4b0",
  "lastMigration": 28,
  "name": "BB-Identity",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3001,
  "hostname": "",
  "routes": [
    {
      "uuid": "618fb22f-4fb4-48f8-b5dd-ba2c8f4ebd76",
      "documentation": "API to update existing Open ID Connect (OIDC) client.",
      "method": "put",
      "endpoint": "client-mgmt/oidc-client/:client_id",
      "responses": [
        {
          "uuid": "efbaf56d-5976-4a18-9849-eb4bdc3c845f",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully updated the client",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "params",
              "modifier": "client_id",
              "value": "e-health-service",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^email_verified$|^phone_number$|^phone_number_verified$|^picture$|^address$|^family_name$|^locale$|^zoneinfo$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^idbb:acr:static-code$|^idbb:acr:generated-code$|^idbb:acr:linked-wallet$|^idbb:acr:biometrics$|^idbb:acr:biometrics-generated-code$|^idbb:acr:linked-wallet-static-code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.status",
              "value": "^active$|^inactive$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "52204aca-343e-4c71-bc46-88091d85dfde",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_grant_type\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid grantTypes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "2645f555-aa2f-462d-8535-8457fbceb9eb",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_auth\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientAuthMethods",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "8699f59d-0c88-432d-94c1-394180e4b890",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_claim\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid userClaims",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^email_verified$|^phone_number$|^phone_number_verified$|^picture$|^address$|^family_name$|^locale$|^zoneinfo$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "74d9d0db-fc8b-4657-bcc6-41dd11c14e32",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_acr\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid authContextRefs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^idbb:acr:static-code$|^idbb:acr:generated-code$|^idbb:acr:linked-wallet$|^idbb:acr:biometrics$|^idbb:acr:biometrics-generated-code$|^idbb:acr:linked-wallet-static-code$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "33e3843f-5b99-422f-bdbd-e1f70acd3718",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_redirect_uri\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid redirectUri",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "^.{1,}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "fc26dde9-cb32-4161-a425-5ebfd4a50f56",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_uri\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid logoUri",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "722b1a6d-af3d-47d6-96ed-9a94fe6b42b3",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_name\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "502ea07a-3187-4825-9650-40a379798f28",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{urlParam 'client_id'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "params",
              "modifier": "client_id",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "params",
              "modifier": "client_id",
              "value": "e-health-service",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "params",
              "modifier": "client_id",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "be9d693c-3a01-4184-b107-88de10e52847",
      "documentation": "The authorize endpoint of Open ID Connect (OIDC)",
      "method": "get",
      "endpoint": "authorize",
      "responses": [
        {
          "uuid": "897e5b31-dbf8-4956-9de6-467e46c9b053",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully validates the provided query parameters using oauth-details endpoint",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "scope",
              "value": "^openid profile$|^openid$|^profile$|^email$|^address$|^phone$|^offline_access$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "scope",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "code",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "response_type",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "client_id",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "^.{1,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "query",
              "modifier": "redirect_uri",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "bc48b183-383f-41eb-999d-fe540017575e",
      "documentation": "API to add new open ID connect (OIDC) clients,",
      "method": "post",
      "endpoint": "client-mgmt/oidc-client",
      "responses": [
        {
          "uuid": "b0f4cf2e-d175-459d-b671-3723c245aa49",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully added new client",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^duplicated$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\-\\+\\/=]*)",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^idbb:acr:static-code$|^idbb:acr:generated-code$|^idbb:acr:linked-wallet$|^idbb:acr:biometrics$|^idbb:acr:biometrics-generated-code$|^idbb:acr:linked-wallet-static-code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^email_verified$|^phone_number$|^phone_number_verified$|^picture$|^address$|^family_name$|^locale$|^zoneinfo$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "",
              "invert": true,
              "operator": "empty_array"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "0767870e-9093-4b7e-bfc7-4cdac55ea1ba",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_public_key\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid publicKey",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\-\\+\\/=]*)",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "461b7c5e-8c17-499d-81eb-92ea716bfc33",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\-\\+\\/=]*)",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "909ac7bc-63fc-4bd5-a1fa-70c12bdf433c",
          "body": "{\n  \"responseTime\": \"string\",\n  \"errors\": [\n    {\n      \"errorCode\": \"duplicate_client_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Duplicate clientId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^duplicated$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "4fe77cd2-ea97-428c-8f58-4232fe7df8cc",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_redirect_uri\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid redirectUris",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.redirectUris",
              "value": "",
              "invert": false,
              "operator": "empty_array"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "47889259-2514-406c-af2f-9b1bcb826574",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientId",
              "value": "^private_key_jwt$",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "fdd01fac-7745-47e5-b207-f73ad092c7b3",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_name\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientName",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "^.{1,256}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientName",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "31ed4032-9ae1-4b1f-911a-e6a5c6a61577",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_rp_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid relyingPartyId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "^.{1,50}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.relyingPartyId",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "650d604e-ddad-4e47-a9dc-ec82b22cae5b",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_uri\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid logoUri",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "^.{1,1024}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.logoUri",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "0350c8b3-7c2f-4e88-a8cd-0ac6b8a114b4",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_client_auth\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid clientAuthMethods",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "^private_key_jwt$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.clientAuthMethods",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "02cb8937-e503-49c5-a301-db51d3c1bb04",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_grant_type\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid grantTypes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "^authorization_code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.grantTypes",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "742483c8-c8ce-4adc-ac68-ddb9ca1eae51",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_claim\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid userClaims",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "^name$|^given_name$|^middle_name$|^preferred_username$|^nickname$|^gender$|^birthdate$|^email$|^email_verified$|^phone_number$|^phone_number_verified$|^picture$|^address$|^family_name$|^locale$|^zoneinfo$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.userClaims",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "38ee21f4-ee49-4e3e-b403-31efbdfa275d",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_acr\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid authContextRefs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "^idbb:acr:static-code$|^idbb:acr:generated-code$|^idbb:acr:linked-wallet$|^idbb:acr:biometrics$|^idbb:acr:biometrics-generated-code$|^idbb:acr:linked-wallet-static-code$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authContextRefs",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "6ada8a97-2c6b-4d42-a6b1-e08452636bca",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"clientId\": \"{{bodyRaw 'request.clientId'}}\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid requestTime",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z?",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "52032d59-837b-4eb0-99b3-2ea11a19401b",
      "type": "http",
      "documentation": "Generate Link code",
      "method": "post",
      "endpoint": "linked-authorization/link-code",
      "responses": [
        {
          "uuid": "7b857de2-0924-46ec-ae20-d32bab689c81",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"linkCodeToBeExpired\",\n    \"expireDateTime\": \"2023-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully generate link code to be expired",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionIdToBeExpired$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "e0c3d9b8-52f3-4fcb-80f0-c41a19070a2f",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"linkCode003\",\n    \"expireDateTime\": \"2023-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully generate second link code",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId03$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "6c64800e-3965-46bd-8e5a-ede5daa6e69a",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"linkCode003\",\n    \"expireDateTime\": \"2023-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully generate second link code (copy)",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId04$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "868551b7-f020-4c71-abdb-288d3f4c8ef5",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"linkCode\",\n    \"expireDateTime\": \"2023-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully generate link code",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId01$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "8e083431-ec93-4fbb-b4eb-2c819f5dc609",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"linkCode_02\",\n    \"expireDateTime\": \"2023-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully generate link code 02",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId02$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "11194ac5-ce77-45ff-94a8-b8a692a5d51a",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"string\",\n    \"expireDateTime\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transaction_id",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "625f1fd5-3b73-44da-801e-5d7ffcee4661",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"string\",\n    \"expireDateTime\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transaction_id - reused",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^reused_completed_transaction_id$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "b7cb73a5-53ad-4936-b641-4d8ab3cc0e51",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Invalid xsrf token",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "69d4eece-b219-4533-aa23-314fe1954838",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkCode\": \"string\",\n    \"expireDateTime\": \"string\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid requestTime",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "163d2bce-a276-4332-8e8e-aa49b15f5e63",
      "documentation": "Endpoint to fetch all the public keys of the IDBB server. Returns public key set in the JWKS format",
      "method": "get",
      "endpoint": ".well-known/jwks.json",
      "responses": [
        {
          "uuid": "6c3df71b-2ccf-41ca-9bae-c35e35313e66",
          "body": "{\n  \"keys\": [\n    {{#repeat 4}}\n    {\n      \"kid\": \"{{faker 'random.alpha' 5}}\",\n      \"use\": \"sig\",\n      \"kty\": \"RSA\",\n      \"e\": \"string\",\n      \"n\": \"string\",\n      \"x5t#S256\": \"string\",\n      \"x5c\": \"string\",\n      \"exp\": \"string\"\n    }\n    {{/repeat}}\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Retrieved public key set in the JWKS format",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "fd256798-534c-4894-a472-d2c3fae26ecf",
      "documentation": "This endpoint is only for facilitating the OIDC provider details in a standard way.",
      "method": "get",
      "endpoint": ".well-known/openid-configuration",
      "responses": [
        {
          "uuid": "d24f895d-4402-4b1b-8302-255738fca7fd",
          "body": "{\n  \"issuer\": \"string\",\n  \"authorization_endpoint\": \"string\",\n  \"token_endpoint\": \"string\",\n  \"userinfo_endpoint\": \"string\",\n  \"jwks_uri\": \"string\",\n  \"registration_endpoint\": \"string\",\n  \"scopes_supported\": [\n    \"openid\"\n  ],\n  \"response_types_supported\": [\n    \"code\"\n  ],\n  \"acr_values_supported\": [\n    \"string\"\n  ],\n  \"userinfo_signing_alg_values_supported\": [\n    \"string\"\n  ],\n  \"userinfo_encryption_alg_values_supported\": [\n    \"string\"\n  ],\n  \"userinfo_encryption_enc_values_supported\": [\n    \"string\"\n  ],\n  \"token_endpoint_auth_methods_supported\": [\n    \"private_key_jwt\"\n  ],\n  \"display_values_supported\": [\n    \"string\"\n  ],\n  \"claim_types_supported\": [\n    \"normal\"\n  ],\n  \"claims_supported\": [\n    \"string\"\n  ],\n  \"claims_locales_supported\": [\n    \"string\"\n  ],\n  \"ui_locales_supported\": [\n    \"string\"\n  ],\n  \"response_modes_supported\": [\n    \"query\"\n  ],\n  \"token_endpoint_auth_signing_alg_values_supported\": [\n    \"RS256\"\n  ],\n  \"id_token_signing_alg_values_supported\": [\n    \"RS256\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully faciliated the OIDC provider detais",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "e1f64ed0-ac86-4811-8085-2f73ef6ea599",
      "type": "http",
      "documentation": "Validate the link-code and its expiry and generate the linkTransactionId",
      "method": "post",
      "endpoint": "linked-authorization/link-transaction",
      "responses": [
        {
          "uuid": "e260d023-1caf-4457-b880-277abf9af8ff",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"linkTransactionId\": \"link_transaction_id_003\",\n    \"clientName\": \"OIDC Client\",\n    \"logoUrl\": \"http://example.com\",\n    \"authorizeScopes\": [\n      \"openid\"\n    ],\n    \"essentialClaims\": [\n      \"name\"\n    ],\n    \"voluntaryClaims\": [\n      \"nonce\"\n    ],\n    \"authFactors\": [\n      [\n        {\n          \"type\": \"PIN\",\n          \"count\": 0,\n          \"bioSubTypes\": [\n            \"string\"\n          ]\n        }\n      ]\n    ],\n    \"configs\": {}\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully validates the link-code and its expiry and generates the linkTransactionId #2",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode003$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "07c283b8-3509-4b1b-bb16-abdc59477a4c",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"linkTransactionId\": \"link_transaction_id_01\",\n    \"clientName\": \"OIDC Client\",\n    \"logoUrl\": \"http://example.com\",\n    \"authorizeScopes\": [\n      \"openid\"\n    ],\n    \"essentialClaims\": [\n      \"name\"\n    ],\n    \"voluntaryClaims\": [\n      \"nonce\"\n    ],\n    \"authFactors\": [\n      [\n        {\n          \"type\": \"PIN\",\n          \"count\": 0,\n          \"bioSubTypes\": [\n            \"string\"\n          ]\n        }\n      ]\n    ],\n    \"configs\": {}\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully validates the link-code and its expiry and generates the linkTransactionId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "fef4cf94-912e-4e75-ac32-95fc548d01fa",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"linkTransactionId\": \"\",\n    \"clientName\": \"\",\n    \"logoUrl\": \"\",\n    \"authorizeScopes\": [],\n    \"essentialClaims\": [],\n    \"voluntaryClaims\": [],\n    \"authFactors\": [\n      [\n        {\n          \"type\": \"PIN\",\n          \"count\": 0,\n          \"bioSubTypes\": []\n        }\n      ]\n    ],\n    \"configs\": {}\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_link_code\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid linkCode",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "af41ece7-44f2-4afa-a3af-50fd338f9104",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {},\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_link_code\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Expired linkCode ",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCodeToBeExpired$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3c5d56e0-4ca4-4a64-8fdf-e6a3408fe7e8",
      "type": "http",
      "documentation": "Checks the status of link code",
      "method": "post",
      "endpoint": "linked-authorization/link-status",
      "responses": [
        {
          "uuid": "9d9dc262-0c42-4f92-b499-363cbb351eee",
          "body": "{\n  \"responseTIme\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkStatus\": \"LINKED\",\n    \"linkedDateTime\": \"2011-10-05T14:49:00.000Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully checks the status of link code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId01$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "d23af834-5bd9-4427-82f0-6c99cdcced34",
          "body": "{\n  \"responseTIme\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkStatus\": \"LINKED\",\n    \"linkedDateTime\": \"2011-10-05T14:49:00.000Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_link_code\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid linkCode -  link code connected to a different transaction id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId01$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode_02$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "4a9265c2-830a-4452-9e90-5c29a223f60b",
          "body": "{\n  \"responseTIme\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkStatus\": \"LINKED\",\n    \"linkedDateTime\": \"2011-10-05T14:49:00.000Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transactionId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId01$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "d8b17bf8-aefc-446e-8e9a-40775756c136",
          "body": "{\n  \"responseTIme\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkStatus\": \"LINKED\",\n    \"linkedDateTime\": \"2011-10-05T14:49:00.000Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transactionId - completed",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "transaction_id_004",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "c4dbe5e1-5cb7-4318-833d-e6447f143fa6",
          "body": "{\n  \"responseTime\": \"string\",\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_no_of_challenges\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid challengeList",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedTransactionId",
              "value": "^link_transaction_id_01$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.individualId",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.challengeList",
              "value": "",
              "invert": false,
              "operator": "empty_array"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "1bacebfe-5004-4234-b231-d08dd2c6e5d6",
          "body": "{\n  \"responseTIme\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"transactionId\": \"{{bodyRaw 'request.transactionId'}}\",\n    \"linkStatus\": \"LINKED\",\n    \"linkedDateTime\": \"2011-10-05T14:49:00.000Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_link_code\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid linkCode",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.linkCode",
              "value": "^linkCode$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0d23ec82-d53a-4792-ba72-7fb7dc3f3cbe",
      "type": "http",
      "documentation": "Generate Link auth code",
      "method": "post",
      "endpoint": "linked-authorization/link-auth-code",
      "responses": [
        {
          "uuid": "6f358d9d-191b-407e-974b-4361ecf006cf",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"code\": \"code\",\n    \"redirectUri\": \"redirectUri\",\n    \"state\": \"state\",\n    \"nonce\": \"nonce\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_link_code\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid link_code but both are not connected to each other",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedCode",
              "value": "^linkCode003$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId01$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "faa2ac67-261a-4ee5-9d04-d861b108a781",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"code\": \"code\",\n    \"redirectUri\": \"redirectUri\",\n    \"state\": \"state\",\n    \"nonce\": \"nonce\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully generate link auth code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedCode",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId04$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "9139e50d-6d6e-4fb7-af34-4aa526b2cbeb",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"code\": \"code\",\n    \"redirectUri\": \"redirectUri\",\n    \"state\": \"state\",\n    \"nonce\": \"nonce\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transaction id - reuse of the completed transaction_id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedCode",
              "value": "^linkCode003$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^transactionId04$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "c26e2456-dd58-4f85-9658-e204452e1872",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"code\": \"code\",\n    \"redirectUri\": \"redirectUri\",\n    \"state\": \"state\",\n    \"nonce\": \"nonce\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_link_code\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid link_code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedCode",
              "value": "^invalid_linked_code$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "f0b2bdaf-431a-438d-9ed6-ebaef613df73",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"code\": \"code\",\n    \"redirectUri\": \"redirectUri\",\n    \"state\": \"state\",\n    \"nonce\": \"nonce\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transaction id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedCode",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "433e0bd5-63cf-4032-af91-0657bdbd3dde",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"code\": \"code\",\n    \"redirectUri\": \"redirectUri\",\n    \"state\": \"state\",\n    \"nonce\": \"nonce\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_link_code\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid transaction id and link code",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedCode",
              "value": "^[A-Za-z0-9]+$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "928af883-114c-4cac-9d86-f02afbe16491",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"response\": {\n    \"code\": \"code\",\n    \"redirectUri\": \"redirectUri\",\n    \"state\": \"state\",\n    \"nonce\": \"nonce\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid request time",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "X-XSRF-TOKEN",
              "value": "^X-XSRF-TOKEN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedCode",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.transactionId",
              "value": "^[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "665ed7fd-1a43-4a1c-873f-56ad9a632c58",
      "documentation": "",
      "method": "post",
      "endpoint": "oauth/token",
      "responses": [
        {
          "uuid": "aa63de40-17c7-4ce3-954a-2f7370ea6db6",
          "body": "{\n  \"id_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\",\n  \"access_token\": \"string.string.string\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 0\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Succesfully recieves the ID and access token",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Cache-Control",
              "value": "no-store"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "grant_type",
              "value": "authorization_code",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "code",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_id",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_assertion_type",
              "value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "http://example.com",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "b625b72e-75bc-4173-8441-f871ae3899da",
          "body": "{\n  \"error\": \"invalid_assertion\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid assertion",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-\\+\\/=]*)",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "3bd0b04a-3fac-4d78-a8c2-a4312d112e3e",
          "body": "{\n  \"error\": \"invalid_assertion_type\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid assertion type",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "client_assertion_type",
              "value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "6dcaac89-b9ec-48ce-9edb-5a4d1bd098d3",
          "body": "{\n  \"error\": \"invalid_redirect_uri\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "invalid_redirect_uri",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Cache-Control",
              "value": "no-store"
            },
            {
              "key": "Pragma",
              "value": "no-cache"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "http://example.com",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "a8ea82dd-e06e-473d-a93a-bc871b4b92de",
          "body": "{\n  \"error\": \"invalid_payload\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid payload",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "grant_type",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "code",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_id",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_assertion_type",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "a54f53b9-494e-4d4f-a9d1-4a295572291f",
          "body": "{\n  \"error\": \"invalid_input\",\n  \"error_description\": \"string\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "grant_type",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "code",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "client_id",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "client_assertion_type",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "client_assertion",
              "value": "",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "redirect_uri",
              "value": "",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null,
      "type": "http"
    },
    {
      "uuid": "17e24054-78ae-4600-82a1-4f0264a4eb3c",
      "type": "http",
      "documentation": "Checks the correctness of the data",
      "method": "post",
      "endpoint": "linked-authorization/authenticate",
      "responses": [
        {
          "uuid": "a0d1c7d0-5c15-432a-9c7a-30f2f92b9aa6",
          "body": "{\n  \"responseTime\": \"string\",\n  \"errors\": [\n    {\n      \"errorCode\": \"auth_failed\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid auth",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.challengeList.0.authFactorType",
              "value": "^PIN$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.challengeList.0.challenge",
              "value": "^9999$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "3e1b6bf6-6ada-4e1a-92e3-d11c83913092",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"linkedTransactionId\": \"{{bodyRaw 'request.linkedTransactionId'}}\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully checks the correctness of the data",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedTransactionId",
              "value": "^link_transaction_id_01$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.individualId",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.challengeList",
              "value": "",
              "invert": true,
              "operator": "empty_array"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "c3500f3e-bc59-4b51-b3bf-58a744ec1403",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"linkedTransactionId\": \"{{bodyRaw 'request.linkedTransactionId'}}\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully checks the correctness of the data  #2",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.linkedTransactionId",
              "value": "^link_transaction_id_002$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.individualId",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.challengeList",
              "value": "",
              "invert": true,
              "operator": "empty_array"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "cdfe2fdd-fe58-4a5e-ac92-36a553e025d8",
          "body": "{\n  \"responseTime\": \"string\",\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_no_of_challenges\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid challengeList",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.challengeList",
              "value": "",
              "invert": false,
              "operator": "empty_array"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "510ae61f-565b-44ac-a911-cf1a64be1f2c",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_identifier\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid identifier",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.individualId",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "b4d51431-29a8-4624-91c5-12ee86704dbb",
          "body": "{\n  \"responseTime\": \"string\",\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_request\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid requestTime",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": false,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "null",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "d1be7b4e-1b78-4d20-b8ee-4b5b8b31caa9",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid linkedTransactionId",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.linkedTransactionId",
              "value": "^link_transaction_id_01$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.linkedTransactionId",
              "value": "^link_transaction_id_003$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "ae13ce1d-5175-4dc7-b38d-b37f203e8980",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"linkedTransactionId\": \"{{bodyRaw 'request.linkedTransactionId'}}\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully checks the correctness of the data (copy)",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "3b55068d-81fe-44ad-91ed-5f2e3531b31d",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid linkedTransactionId - reused link code",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "899ddb3a-2dfb-4a15-b4b1-dfcce7f69459",
      "type": "http",
      "documentation": "Wallet binding endpoint is invoked by Wallet's backend server.",
      "method": "post",
      "endpoint": "wallet-binding",
      "responses": [
        {
          "uuid": "9fc4c845-1c21-4c32-9390-9a23e9b9cd3d",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"walletUserId\": \"string\",\n    \"certificate\": \"string\",\n    \"expireDateTime\": \"2023-07-21T12:34:56Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"duplicate_public_key\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Duplicated public key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^eyJrdHkiOiJSU0EiLCJhIjoiQVFBQiIsInVzZSI6InNpZyIsImFsZyI6IlJTMjU2IiwibiI6IlZGVWlQaHBPTkttNTRXeWhUZ1FKMU9ORU53WDFYNm5SNHF5TldBT0RLRlhzWUcyMEVadEp3THl1dUwzNUQxb0JtTEhoUVk5emRXVlpaVnk1cjh1SjN1ZWIwcGZsOFpxTzVCTnZnZW9ETTZkZXh0cEk2c250UUNVY1J1RVJCN29DOUZycldQWWtLTzlsRlFmckpGUmhtRHRONFh2aUVwSkFYVzVMcHgwaU5YSm5YTnJGWk9jS3JmUWZBV1B4QnJJRlBNSlJCeTZnaU0xUkpBandqSFE4VUxPV0dScG9JT0d5UXkySU9XS0c2ZjBVckZhTzlxVUltQlI4MmFQdW1TQXVKYXNsUkZUaE00bjZBSkZycmhCVDVuQWdTNmpQZjlENDhOWWtYUnJvSm5UbEpxbTdrVmdmT01qUEtnUTdUOUpzSjlNVHBWNWtlVFFTd0UyR0haTmExUCJ9$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "2dbe70a9-fea4-4878-ade2-89c87c6d9a2d",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"walletUserId\": \"string\",\n    \"certificate\": \"string\",\n    \"expireDateTime\": \"2029-07-21T12:34:56Z\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully generated wallet user id",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.individualId",
              "value": "^[a-zA-Z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authFactorType",
              "value": "^[a-zA-Z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.format",
              "value": "^[A-Za-z0-9]+-[A-Za-z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.challengeList",
              "value": "",
              "invert": true,
              "operator": "empty_array"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\\\-\\\\+\\\\/=]*)",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        },
        {
          "uuid": "6a6398dd-35d3-435a-a23f-376c6f06b17d",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"walletUserId\": \"string\",\n    \"certificate\": \"string\",\n    \"expireDateTime\": \"2023-07-21T12:34:56Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"unsupported_challenge_format\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unsupported challenge format",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.individualId",
              "value": "^[a-zA-Z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authFactorType",
              "value": "^[a-zA-Z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.format",
              "value": "[A-Za-z]+-[A-Za-z]+",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.challengeList",
              "value": "",
              "invert": false,
              "operator": "empty_array"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\\\-\\\\+\\\\/=]*)",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "8a3a3c99-c1b6-4e0e-8d44-aeb3e7337681",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"walletUserId\": \"string\",\n    \"certificate\": \"string\",\n    \"expireDateTime\": \"2023-07-21T12:34:56Z\"\n  },\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_public_key\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid public key",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "requestTime",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "request.individualId",
              "value": "^[a-zA-Z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.authFactorType",
              "value": "^[a-zA-Z0-9]+$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.format",
              "value": "[A-Za-z]+-[A-Za-z]+",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "request.challengeList",
              "value": "",
              "invert": true,
              "operator": "empty_array"
            },
            {
              "target": "body",
              "modifier": "request.publicKey",
              "value": "^([a-zA-Z0-9_=]+)([a-zA-Z0-9_=]+)([a-zA-Z0-9_\\\\-\\\\+\\\\/=]*)",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1367d2e-3f08-4615-9e2a-752d4349670c",
      "type": "http",
      "documentation": "Linked Consent Endpoint",
      "method": "post",
      "endpoint": "linked-authorization/consent",
      "responses": [
        {
          "uuid": "b8504191-a369-4b9d-8434-55ad6d0b4dbd",
          "body": "{\n  \"responseTime\": \"string\",\n  \"response\": {\n    \"linkedTransactionId\": \"{{bodyRaw 'request.linkedTransactionId'}}\"\n  },\n  \"errors\": []\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successfully sends the accepted user claims and permitted scopes",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.linkedTransactionId",
              "value": "^link_transaction_id_01$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        },
        {
          "uuid": "340b65be-fff8-4337-bf6f-c49125c046e0",
          "body": "{\n  \"responseTime\": \"2011-10-05T14:49:00.000Z\",\n  \"errors\": [\n    {\n      \"errorCode\": \"invalid_transaction_id\",\n      \"errorMessage\": \"string\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Invalid linkedTransactionId",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "request.linkedTransactionId",
              "value": "^link_transaction_id_01$",
              "invert": true,
              "operator": "regex"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dcb5fb20-d94d-47e3-a6c7-0364cde67a8b",
      "type": "http",
      "documentation": "API to receive user information",
      "method": "get",
      "endpoint": "oidc/userinfo",
      "responses": [
        {
          "uuid": "805e6d7e-5211-4a5e-9365-be8546f4b844",
          "body": "\"string\"",
          "latency": 0,
          "statusCode": 200,
          "label": "successfully receives user information",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/jwt"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c45789d-d5f7-4fca-a886-6754d7936c78",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "",
      "responses": [
        {
          "uuid": "5c0a52bd-4162-4166-af76-0ab43eb940b6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id"
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [],
  "folders": [],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "618fb22f-4fb4-48f8-b5dd-ba2c8f4ebd76"
    },
    {
      "type": "route",
      "uuid": "be9d693c-3a01-4184-b107-88de10e52847"
    },
    {
      "type": "route",
      "uuid": "bc48b183-383f-41eb-999d-fe540017575e"
    },
    {
      "type": "route",
      "uuid": "52032d59-837b-4eb0-99b3-2ea11a19401b"
    },
    {
      "type": "route",
      "uuid": "163d2bce-a276-4332-8e8e-aa49b15f5e63"
    },
    {
      "type": "route",
      "uuid": "fd256798-534c-4894-a472-d2c3fae26ecf"
    },
    {
      "type": "route",
      "uuid": "e1f64ed0-ac86-4811-8085-2f73ef6ea599"
    },
    {
      "type": "route",
      "uuid": "3c5d56e0-4ca4-4a64-8fdf-e6a3408fe7e8"
    },
    {
      "type": "route",
      "uuid": "0d23ec82-d53a-4792-ba72-7fb7dc3f3cbe"
    },
    {
      "type": "route",
      "uuid": "899ddb3a-2dfb-4a15-b4b1-dfcce7f69459"
    },
    {
      "type": "route",
      "uuid": "c1367d2e-3f08-4615-9e2a-752d4349670c"
    },
    {
      "type": "route",
      "uuid": "17e24054-78ae-4600-82a1-4f0264a4eb3c"
    },
    {
      "type": "route",
      "uuid": "665ed7fd-1a43-4a1c-873f-56ad9a632c58"
    },
    {
      "type": "route",
      "uuid": "dcb5fb20-d94d-47e3-a6c7-0364cde67a8b"
    },
    {
      "type": "route",
      "uuid": "7c45789d-d5f7-4fca-a886-6754d7936c78"
    }
  ]
}